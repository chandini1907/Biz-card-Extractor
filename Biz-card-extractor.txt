import streamlit as st
import easyocr
import PIL
from PIL import ImageDraw
import io
import csv
import pandas as pd
import sqlite3
import pandas as pd
from io import StringIO



#app title
st.title("Card Extractor")
st.caption("Extracting Business Card Data")
st.header("You can upload your card here")

# Upload image
uploaded_file = st.file_uploader("Choose an image...", type=["jpg", "jpeg", "png"])
image_data=None

# Display image
if uploaded_file is not None:
    image = uploaded_file.read()
    st.image(image, caption="Uploaded Image", use_column_width=True)

    # Extract text from image
    reader = easyocr.Reader(['en'])
    result = reader.readtext(image,detail=0)
    image_data=result
    if result:
        st.header("Biz Card Details")
        df=pd.DataFrame(result)
        df.columns=['Details']
        st.write(df)
    else:
        st.write("Warning")



# create a connection to a SQLite database
conn = sqlite3.connect('Business_database.db')
if st.sidebar.button("View Table"):
    df1=pd.DataFrame(image_data)
    df1.columns=['Details']
    create_sql="CREATE TABLE IF NOT EXISTS Business_table(Details TEXT)"
# Create a cursor object
    cursor = conn.cursor()
    cursor.execute(create_sql)
# write the DataFrame to a SQLite table
    df1.to_sql(name='Business_table', con=conn, if_exists='replace', index=False)
    st.sidebar.table(df1)
elif st.sidebar.button("Update Table"):
    cursor = conn.cursor()
    # Define the new values
    value=st.sidebar.text_input("your new value")
    index=st.sidebar.number_input("Enter the ID of the record you want to update:", min_value=0, step=1)
    if st.sidebar.button("Update Record"):

    # Execute the update statement
        cursor.execute("UPDATE Business_table SET value=? WHERE Index=?", (value, index))
    # Commit the changes
        conn.commit()
        st.sidebar.success("Record updated!")
elif st.sidebar.button("Delete Data"):
    cursor = conn.cursor()
    record_id = st.sidebar.number_input("Enter the ID of the record you want to delete:", min_value=0, value=1, step=1)
    if st.sidebar.button("Delete Record"):
        cursor.execute("DELETE FROM card_data WHERE id=?", (record_id,))
        conn.commit()
        st.sidebar.warning("Record deleted!")
else:
    conn.close()
